(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{514:function(e,t,a){"use strict";a.r(t);var n=a(1),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"javscript-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javscript-functions"}},[e._v("#")]),e._v(" Javscript Functions")]),e._v(" "),a("h2",{attrs:{id:"what-are-the-three-ways-to-syntactically-write-a-function-what-are-the-differences-in-how-the-function-acts-if-any"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-are-the-three-ways-to-syntactically-write-a-function-what-are-the-differences-in-how-the-function-acts-if-any"}},[e._v("#")]),e._v(" What are the three ways to syntactically write a function? What are the differences in how the function acts (if any)?")]),e._v(" "),a("p",[e._v("The three ways to syntactically wire a function are Function Declaration, Function Expressions, and Arrow Function Expressions.\nA Function Declaration is used to define a named function, a Function Expression is used to define a named OR anonymous function, and an Arrow Function Expression is a shorter syntax to write the function.")]),e._v(" "),a("h2",{attrs:{id:"what-is-the-difference-between-parameters-and-arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-difference-between-parameters-and-arguments"}},[e._v("#")]),e._v(" What is the difference between Parameters and Arguments?")]),e._v(" "),a("p",[e._v("Parameters are the names created when defining a function. Arguments are the values that the functions receives from the parameters when the function is invoked.")]),e._v(" "),a("h2",{attrs:{id:"what-are-higher-order-functions-can-you-provide-an-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-are-higher-order-functions-can-you-provide-an-example"}},[e._v("#")]),e._v(" What are higher order functions? Can you provide an example?")]),e._v(" "),a("p",[e._v("A higher-order function is a function that accepts another function as a parameter, or returns a function.  Array.prototype.filter is a higher-order function.")]),e._v(" "),a("h2",{attrs:{id:"daily-challenge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#daily-challenge"}},[e._v("#")]),e._v(" Daily Challenge")]),e._v(" "),a("p",[e._v("Here is the daily challenge for day 7. "),a("a",{attrs:{href:"https://derekshain.github.io/js-loopsandarrays/",target:"_blank",rel:"noopener noreferrer"}},[e._v("JS Loops and Arrays"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);